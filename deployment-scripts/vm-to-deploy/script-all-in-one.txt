
================================================================
0env-set.sh
----------------------------------------------------------------
#! /bin/bash
set -o nounset
set -o errexit
#sed -i 's/\r$//' *.sh

Project_ID=xxx
Zone=xxx
VM_NAME=my-vm-001
SA_ACCOUNT=auto_deploy@xxx.com
DEPLOY_FOLDER=deploy_folder
LOGINUSER=ubuntu
USERNAME=nexus1
PASSWD=pass1

echo "Env set. VM_NAME=$VM_NAME"


================================================================
1vm-create.sh
----------------------------------------------------------------
#! /bin/bash
set -o nounset
set -o errexit
source 0env-set.sh

gcloud config list
gcloud auth login

gcloud beta compute instances create $VM_NAME --project=$Project_ID --zone=$Zone --machine-type=n1-standard-2 \
--network-interface=xxx \
--service-account=$SA_ACCOUNT
echo "VM created. vm=$VM_NAME"
echo "gcloud compute ssh $VM_NAME --zone $Zone --internal-ip"


================================================================
2git-clone.sh
----------------------------------------------------------------
#! /bin/bash
set -o nounset
set -o errexit
source 0env-set.sh

rm -rf $DEPLOY_FOLDER/aa/
git clone --branch main --single-branch https://xxx/aa.git $DEPLOY_FOLDER/aa
echo "Git cloned to $DEPLOY_FOLDER for uploading"


================================================================
3scp-upload.sh
----------------------------------------------------------------
#! /bin/bash
set -o nounset
set -o errexit
source 0env-set.sh

gcloud compute scp --zone $Zone --internal-ip --recurse "$DEPLOY_FOLDER" $LOGINUSER@$VM_NAME:/home/$LOGINUSER/
echo "Folder $DEPLOY_FOLDER uploaded to remote VM"


================================================================
4remote-software-install.sh
----------------------------------------------------------------
#! /bin/bash
set -o nounset
set -o errexit
source 0env-set.sh

gcloud compute ssh $VM_NAME --zone $Zone --internal-ip --command "cd /home/$LOGINUSER/$DEPLOY_FOLDER && chmod 777 4-1remote-software-install.sh && sudo ./4-1remote-software-install.sh $USERNAME $PASSWD"
echo "Remote software installed"


================================================================
deploy_folder/4-1remote-software-install.sh
----------------------------------------------------------------
#! /bin/bash
set -o nounset
set -o errexit
#sed -i 's/\r$//' *.sh

tar -xzvf dockerxxx.tgz
cp docker/* /usr/bin/
nohup dockerd &
echo 'Docker installed & started'

tar -xzvf OpenJDKxxx.tar.gz -C /opt
echo 'export JAVA_HOME="/opt/jdk-xxx"' >> ~/.bash_profile
echo 'PATH="$JAVA_HOME"/bin:$PATH' >> ~/.bash_profile
source ~/.bash_profile
java -version
echo 'Jdk installed'

docker login -u $1 -p $2 nexusxxx:12345
docker run --name mysql -e MYSQL_ROOT_PASSWORD=root -d --add-host=host.docker.internal:host-gateway -p 3306:3306 nexusxxx:12345/com/xx/mysql:v5.7
echo 'docker mysql installed'

if [ ! -d "/usr/local/app1" ]; then
    echo 'Not exists, so mkdir'
    mkdir -p /usr/local/app1
else
    echo '/usr/local/app1 exists'
fi


================================================================
5app-redeploy-restart.sh
----------------------------------------------------------------
#! /bin/bash
set -o nounset
set -o errexit
source 0env-set.sh

gcloud compute ssh $VM_NAME --zone $Zone --internal-ip --command "cd /home/$LOGINUSER/$DEPLOY_FOLDER && chmod 777 5-1app-redeploy-restart.sh && sudo ./5-1app-redeploy-restart.sh"
echo "Remote app redeployed"


================================================================
deploy_folder/5-1app-redeploy-restart.sh
----------------------------------------------------------------
#! /bin/bash
set -o nounset
set -o errexit
#sed -i 's/\r$//' *.sh

APP_FILE_NAME=simple-e-commerce-v2-1.0.0

if [[ "$PWD" == "/usr/local/app1" ]]; then
  echo ""
else
  echo "copy."
  cp $APP_FILE_NAME.jar 5-1app-redeploy-restart.sh /usr/local/app1/
  cd /usr/local/app1
fi
#ps -ef | grep APP_FILE_NAME | grep -v grep | awk '{print $2}' | xargs kill -9
#ps -aux | grep APP_FILE_NAME | grep -v grep | awk '{print $2}' | xargs kill -9
#kill -s 9 `pgrep APP_FILE_NAME`
PID=`ps -eaf | grep $APP_FILE_NAME | grep -v grep | awk '{print $2}'`
if [[ "" != "$PID" ]]; then
  echo "killing $PID"
  kill -9 $PID
fi
nohup java -server -Dspring.profiles.active=dev -jar $APP_FILE_NAME.jar > /dev/null 2>&1 &
PID=`ps -eaf | grep $APP_FILE_NAME | grep -v grep | awk '{print $2}'`
echo "Started PID=$PID"


